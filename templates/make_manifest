#!/bin/bash

set -e

infrastructure=$1
template_prefix="contrib-services"

if [ "$infrastructure" != "openstack-neutron" ] && \
   [ "$infrastructure" != "vsphere" ] && \
   [ "$infrastructure" != "warden" ] ; then
  echo "usage: ./make_manifest <openstack-neutron|vsphere|warden>"
  exit 1
fi

shift

NAME=$template_prefix-$infrastructure

if [ -z $DIRECTOR_UUID ] ; then
  BOSH_STATUS=$(bosh status)
  DIRECTOR_UUID=$(echo "$BOSH_STATUS" | grep UUID | awk '{print $2}')
  DIRECTOR_CPI=$(echo "$BOSH_STATUS" | grep CPI | awk '{print $2}')
  DIRECTOR_NAME=$(echo "$BOSH_STATUS" | grep Name | awk '{print $2}')

  if [[ $DIRECTOR_NAME = "warden" ]]; then
    if [[ $infrastructure != "warden" ]]; then
      echo "Not targeting bosh-lite with warden CPI. Please use 'bosh target' before running this script."
      exit 1
    fi
  fi

  if [[ $DIRECTOR_CPI = "aws" ]]; then
    if [[ $infrastructure = "aws-ec2" ]]; then
      echo "Not targeting an AWS BOSH. Please use 'bosh target' before running this script."
      exit 1
    fi
  fi

  if [[ $DIRECTOR_CPI != "openstack" ]]; then
    if [[ $infrastructure = "openstack-neutron" ]]; then
      echo "Not targeting an OpenStack BOSH. Please use 'bosh target' before running this script."
      exit 1
    fi
  fi
fi

templates=$(dirname $0)
release=$templates/..
tmpdir=$release/tmp

mkdir -p $tmpdir
cp $templates/stub.yml $tmpdir/stub-with-uuid.yml
echo $DIRECTOR_NAME $DIRECTOR_CPI $DIRECTOR_UUID
perl -pi -e "s/PLACEHOLDER-DIRECTOR-UUID/$DIRECTOR_UUID/g" $tmpdir/stub-with-uuid.yml
perl -pi -e "s/NAME/$NAME/g" $tmpdir/stub-with-uuid.yml

spiff merge \
  $templates/deployment.yml \
  $templates/jobs.yml \
  $templates/properties.yml \
  $templates/infrastructure-${infrastructure}.yml \
  $tmpdir/stub-with-uuid.yml \
  $* > $tmpdir/$NAME-manifest.yml

if [ -z "$BOSH_STATUS" ] ; then
  echo "generated manifest:"
  echo $tmpdir/$NAME-manifest.yml
else
  bosh deployment $tmpdir/$NAME-manifest.yml
  bosh status
fi
